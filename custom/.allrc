# .allrc
# Run by .zshrc as first custom config file definition.

## Reset load message custom variables ##
export ZSH_LOAD_ERROR=false
export ZSH_LOAD_WARN=false

## Core Functions ##

# zsh_load_msg <type: 0,1,2> <message>
# :variablize initial load messages
function zsh_load_msg() {
  case $1 in

    0)
      export ZSH_LOAD_TYPE="NOTICE"
      ;;
    
    1)
      export ZSH_LOAD_TYPE="WARNING"
      ;;

    2)
      export ZSH_LOAD_TYPE="ERROR"
      ;;

    *)
      export ZSH_LOAD_TYPE="??? invalid type ???"
      ;;
  esac

  #if [[! -v ZSH_QUIET_STARTUP ]]; then # TODO -- errors really be supressed even if quiet?
    # exit on error
    if [[ $ZSH_LOAD_TYPE == "ERROR" ]] then
      printf "\a[%s] zsh startup: %s\n" $ZSH_LOAD_TYPE $2 # \a triggers an alarm on errors
      export ZSH_LOAD_ERROR=true
      return -1
    elif [[ $ZSH_LOAD_TYPE == "WARNING" ]] then # did we get warned?
      export ZSH_LOAD_WARN=true
      printf "[%s] zsh startup: %s\n" $ZSH_LOAD_TYPE $2
    else # By default we only want to display warns and errors.
      if [[ ( $ZSH_LOAD_TYPE == "NOTICE" ) && ( $ZSH_FORCE_NOTICES ) ]] then
        return 0
      else
        printf "[%s] zsh startup: %s\n" $ZSH_LOAD_TYPE $2
      fi
    fi
  #fi
}

zsh_load_msg 0 "Loading configuration..."

source $HOME/configs/custom/includes/.debugmode

if [ $ZSH_DEBUG_MODE ]; then
  zsh_load_msg 0 "Debug mode is enabled."
fi

function install_tmux_plugin_mgr() {
  zsh_load_msg 0 "Installing Tmux Plugin Manager"
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
  zsh_load_msg 0 "Install completed."
  source $HOME/.zshrc
}

# Check if Tmux Plugin Manager is installed
if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
  zsh_load_msg 1 "Tmux Plugin Manager isn't installed at the expected directory"
  printf '%s' 'Install now? [y/N]'
  read tpm_warn_response
  case "$tpm_warn_response" in
      [yY][eE][sS]|[yY]) 
          install_tmux_plugin_mgr
          ;;
      *)
          printf 'Ok, not installing.'
          ;;
  esac
fi

## Universal Commands ##

# zshrc
# :reload zsh
alias zshrc="source ~/.zshrc"

# rcgo
# :quickly go to the custom zsh configuration folder
alias rcgo="cd ~/configs/custom"

## Navigation
# la
# :list all files in folder (including hidden)
# !note. this command may be overwritten if eza is enabled!
alias la="ls -lah"

# lat
# :list all files in folder (including hidden), sorted by newest first
# !note. this command may be overwritten if eza is enabled!
alias lat="ls -lath"

# Use eza if it's installed, and wanted
source $HOME/configs/custom/includes/.eza

## Files

# Replace cp with rsync so we can see what's going on.
# See https://askubuntu.com/questions/17275/how-to-show-the-transfer-progress-and-speed-when-copying-files-with-cp
alias cp="rsync -ah --progress"

## Useful tools

alias wip="ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'"
alias speedtest="curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -"

# Weather
# @TODO accept optional alternative zips (+ cities?)
alias swea="curl wttr.in/23219\?1nqF"
alias weather="curl wttr.in/23219\?F"
alias weatherbox="clear && curl wttr.in/23219\?1nqF && read  -n 1 -p"
alias weatherrec="clear && curl wttr.in/23219\?2qF && read  -n 1 -p"


## Dependent Functions ##

# lag
# :combine file listing and search (not to be confused with a lag switch)
function lag() {
  la | grep $1
}

# Perplex
# :run Perplex
function perplex() {
  cd ~/Projects/Perplex
  venv
  poetry install
  ./start.ps1
}